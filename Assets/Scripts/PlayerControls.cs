//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""FirstPersonCamera"",
            ""id"": ""c5eba57b-8daa-4136-b14b-ac075ab9ce29"",
            ""actions"": [
                {
                    ""name"": ""GamepadLook"",
                    ""type"": ""Value"",
                    ""id"": ""f7db4797-5f22-494f-82bd-e8f6b6b103fe"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLook"",
                    ""type"": ""Value"",
                    ""id"": ""b1d75ee2-ae46-41a5-9a5f-396fcb8355da"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""92b7f781-6f40-4737-871b-2626e9ac683b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GamepadLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6331533a-256a-464c-83ae-68607377978b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""FirstPersonStuff"",
            ""id"": ""ba33c490-df66-4133-ae08-b1b00129e406"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""bb59dcf0-ac95-4bf2-bf53-e436666a0510"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""f43652d5-2ee9-4364-aca6-1c81427b123e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""2aacf3fb-94a1-408b-a8f7-9eeefc8df996"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equipment"",
                    ""type"": ""Button"",
                    ""id"": ""e4348891-0b6e-4a20-834e-210c49a30464"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1995278d-d48e-4339-a74c-b1903c783289"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""db15a5ca-9beb-4044-a716-2cfefbc3a91c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap Weapon"",
                    ""type"": ""Button"",
                    ""id"": ""7bf745b6-a533-4da3-a799-fa417c468dab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw Grenade"",
                    ""type"": ""Button"",
                    ""id"": ""7e29bdfd-d2fb-4be8-ae4b-a86e8b165e93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next Grenade"",
                    ""type"": ""Button"",
                    ""id"": ""441d3b56-a81d-40cd-90c2-32434041c018"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Swap Sidearm"",
                    ""type"": ""Button"",
                    ""id"": ""dbf948ea-461c-452c-a149-70d037e20dc1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""087f2cec-306f-4e31-a910-40b7ad7a45a0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""743ecdab-a10f-4fd8-a77b-251a33d45891"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a5d32454-5aed-4cd2-9749-bf0041a056e2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2243021-f1d4-482f-a185-64b1ca59fe74"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b1b13f52-2795-4bad-92b6-a71e9b6b271e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b5f1e826-48dc-4c43-baeb-1f38d01dd94b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e301cf2-785c-4780-a909-261f02f0366f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f3b0bb0-69f3-431b-9794-bce270fc8ba2"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50d947fc-8419-4a87-a85b-789feb427c33"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2ef7456-b9f7-4555-bd0d-666fce179266"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca58a0e5-1ff6-4c69-bff8-82f87ebb0f78"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72313b96-52ee-4092-a122-2a5e7c45a79d"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb934928-cb46-4c0c-8743-f0597940b3da"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cb4e7c-166a-44d6-849f-868dcf6ce6f2"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffcc6961-6ed0-410c-b3e2-46a7d8e17a78"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5420a1c1-e523-4603-a252-e606e8a68d44"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d2c3501-e9ec-4868-9273-8c9008f602c3"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw Grenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4060d330-daa0-4c69-9f66-e3e84da423ff"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw Grenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c281483-c3d3-46bd-b2b9-41a27b2046ac"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Grenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aabbbe13-9ff8-4451-9bd0-13a7a7a93e8f"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Grenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5db2ba4d-39b1-4689-b7c2-4687b1fdc5c6"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""617a62b6-20e0-468d-8f0e-3e968106b1f0"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63f93b2f-d740-4425-b8ab-074f8b2283e2"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap Sidearm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""946bafbd-2890-4d2b-9796-952e4161f601"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swap Sidearm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FirstPersonCamera
        m_FirstPersonCamera = asset.FindActionMap("FirstPersonCamera", throwIfNotFound: true);
        m_FirstPersonCamera_GamepadLook = m_FirstPersonCamera.FindAction("GamepadLook", throwIfNotFound: true);
        m_FirstPersonCamera_MouseLook = m_FirstPersonCamera.FindAction("MouseLook", throwIfNotFound: true);
        // FirstPersonStuff
        m_FirstPersonStuff = asset.FindActionMap("FirstPersonStuff", throwIfNotFound: true);
        m_FirstPersonStuff_Move = m_FirstPersonStuff.FindAction("Move", throwIfNotFound: true);
        m_FirstPersonStuff_Aim = m_FirstPersonStuff.FindAction("Aim", throwIfNotFound: true);
        m_FirstPersonStuff_Shoot = m_FirstPersonStuff.FindAction("Shoot", throwIfNotFound: true);
        m_FirstPersonStuff_Equipment = m_FirstPersonStuff.FindAction("Equipment", throwIfNotFound: true);
        m_FirstPersonStuff_Jump = m_FirstPersonStuff.FindAction("Jump", throwIfNotFound: true);
        m_FirstPersonStuff_Reload = m_FirstPersonStuff.FindAction("Reload", throwIfNotFound: true);
        m_FirstPersonStuff_SwapWeapon = m_FirstPersonStuff.FindAction("Swap Weapon", throwIfNotFound: true);
        m_FirstPersonStuff_ThrowGrenade = m_FirstPersonStuff.FindAction("Throw Grenade", throwIfNotFound: true);
        m_FirstPersonStuff_NextGrenade = m_FirstPersonStuff.FindAction("Next Grenade", throwIfNotFound: true);
        m_FirstPersonStuff_SwapSidearm = m_FirstPersonStuff.FindAction("Swap Sidearm", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FirstPersonCamera
    private readonly InputActionMap m_FirstPersonCamera;
    private IFirstPersonCameraActions m_FirstPersonCameraActionsCallbackInterface;
    private readonly InputAction m_FirstPersonCamera_GamepadLook;
    private readonly InputAction m_FirstPersonCamera_MouseLook;
    public struct FirstPersonCameraActions
    {
        private @PlayerControls m_Wrapper;
        public FirstPersonCameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @GamepadLook => m_Wrapper.m_FirstPersonCamera_GamepadLook;
        public InputAction @MouseLook => m_Wrapper.m_FirstPersonCamera_MouseLook;
        public InputActionMap Get() { return m_Wrapper.m_FirstPersonCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirstPersonCameraActions set) { return set.Get(); }
        public void SetCallbacks(IFirstPersonCameraActions instance)
        {
            if (m_Wrapper.m_FirstPersonCameraActionsCallbackInterface != null)
            {
                @GamepadLook.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnGamepadLook;
                @GamepadLook.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnGamepadLook;
                @GamepadLook.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnGamepadLook;
                @MouseLook.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnMouseLook;
                @MouseLook.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnMouseLook;
                @MouseLook.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnMouseLook;
            }
            m_Wrapper.m_FirstPersonCameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @GamepadLook.started += instance.OnGamepadLook;
                @GamepadLook.performed += instance.OnGamepadLook;
                @GamepadLook.canceled += instance.OnGamepadLook;
                @MouseLook.started += instance.OnMouseLook;
                @MouseLook.performed += instance.OnMouseLook;
                @MouseLook.canceled += instance.OnMouseLook;
            }
        }
    }
    public FirstPersonCameraActions @FirstPersonCamera => new FirstPersonCameraActions(this);

    // FirstPersonStuff
    private readonly InputActionMap m_FirstPersonStuff;
    private IFirstPersonStuffActions m_FirstPersonStuffActionsCallbackInterface;
    private readonly InputAction m_FirstPersonStuff_Move;
    private readonly InputAction m_FirstPersonStuff_Aim;
    private readonly InputAction m_FirstPersonStuff_Shoot;
    private readonly InputAction m_FirstPersonStuff_Equipment;
    private readonly InputAction m_FirstPersonStuff_Jump;
    private readonly InputAction m_FirstPersonStuff_Reload;
    private readonly InputAction m_FirstPersonStuff_SwapWeapon;
    private readonly InputAction m_FirstPersonStuff_ThrowGrenade;
    private readonly InputAction m_FirstPersonStuff_NextGrenade;
    private readonly InputAction m_FirstPersonStuff_SwapSidearm;
    public struct FirstPersonStuffActions
    {
        private @PlayerControls m_Wrapper;
        public FirstPersonStuffActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_FirstPersonStuff_Move;
        public InputAction @Aim => m_Wrapper.m_FirstPersonStuff_Aim;
        public InputAction @Shoot => m_Wrapper.m_FirstPersonStuff_Shoot;
        public InputAction @Equipment => m_Wrapper.m_FirstPersonStuff_Equipment;
        public InputAction @Jump => m_Wrapper.m_FirstPersonStuff_Jump;
        public InputAction @Reload => m_Wrapper.m_FirstPersonStuff_Reload;
        public InputAction @SwapWeapon => m_Wrapper.m_FirstPersonStuff_SwapWeapon;
        public InputAction @ThrowGrenade => m_Wrapper.m_FirstPersonStuff_ThrowGrenade;
        public InputAction @NextGrenade => m_Wrapper.m_FirstPersonStuff_NextGrenade;
        public InputAction @SwapSidearm => m_Wrapper.m_FirstPersonStuff_SwapSidearm;
        public InputActionMap Get() { return m_Wrapper.m_FirstPersonStuff; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirstPersonStuffActions set) { return set.Get(); }
        public void SetCallbacks(IFirstPersonStuffActions instance)
        {
            if (m_Wrapper.m_FirstPersonStuffActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnMove;
                @Aim.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnAim;
                @Shoot.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnShoot;
                @Equipment.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnEquipment;
                @Equipment.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnEquipment;
                @Equipment.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnEquipment;
                @Jump.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnJump;
                @Reload.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnReload;
                @SwapWeapon.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnSwapWeapon;
                @ThrowGrenade.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnThrowGrenade;
                @ThrowGrenade.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnThrowGrenade;
                @ThrowGrenade.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnThrowGrenade;
                @NextGrenade.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnNextGrenade;
                @NextGrenade.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnNextGrenade;
                @NextGrenade.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnNextGrenade;
                @SwapSidearm.started -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnSwapSidearm;
                @SwapSidearm.performed -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnSwapSidearm;
                @SwapSidearm.canceled -= m_Wrapper.m_FirstPersonStuffActionsCallbackInterface.OnSwapSidearm;
            }
            m_Wrapper.m_FirstPersonStuffActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Equipment.started += instance.OnEquipment;
                @Equipment.performed += instance.OnEquipment;
                @Equipment.canceled += instance.OnEquipment;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @SwapWeapon.started += instance.OnSwapWeapon;
                @SwapWeapon.performed += instance.OnSwapWeapon;
                @SwapWeapon.canceled += instance.OnSwapWeapon;
                @ThrowGrenade.started += instance.OnThrowGrenade;
                @ThrowGrenade.performed += instance.OnThrowGrenade;
                @ThrowGrenade.canceled += instance.OnThrowGrenade;
                @NextGrenade.started += instance.OnNextGrenade;
                @NextGrenade.performed += instance.OnNextGrenade;
                @NextGrenade.canceled += instance.OnNextGrenade;
                @SwapSidearm.started += instance.OnSwapSidearm;
                @SwapSidearm.performed += instance.OnSwapSidearm;
                @SwapSidearm.canceled += instance.OnSwapSidearm;
            }
        }
    }
    public FirstPersonStuffActions @FirstPersonStuff => new FirstPersonStuffActions(this);
    public interface IFirstPersonCameraActions
    {
        void OnGamepadLook(InputAction.CallbackContext context);
        void OnMouseLook(InputAction.CallbackContext context);
    }
    public interface IFirstPersonStuffActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnEquipment(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnSwapWeapon(InputAction.CallbackContext context);
        void OnThrowGrenade(InputAction.CallbackContext context);
        void OnNextGrenade(InputAction.CallbackContext context);
        void OnSwapSidearm(InputAction.CallbackContext context);
    }
}
